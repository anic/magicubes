<b>魔方的入门玩法

以下教程转载自http://www.rubik.com.cn 魔方小站

<b>游戏作者 Anic
yaoancheng@gmail.com

<page>
<b>第一步
在第一面做一个十字，形成如下的样子
<img>/tutorial/level1/cross.gif
注意啊，你对好的十字必须如上图，每个侧面的棱和中心是同色的。下面几页介绍几个算法

<page>
初始状态
<img>/tutorial/level1/cross01.gif
结束状态
<img>/tutorial/level1/cross04.gif
开始：
把蓝黄色块 转到底面
<img>/tutorial/common/frontc.gif
<img>/tutorial/level1/cross02.gif
旋转底面，对好侧面黄色
<img>/tutorial/common/downc.gif
<img>/tutorial/level1/cross03.gif
翻上来
<img>/tutorial/common/rightc.gif
<img>/tutorial/level1/cross04.gif

<page>
<b>第二步
对好第一面，加上四侧面的T字型，形成
<img>/tutorial/level2/firstlayer.gif
初始状态
<img>/tutorial/level2/firstlayer11.gif
此步很巧妙，同时达成两个目的:一个是让顶层的目标角位置到底层来“接应”蓝红黄角块，另一个是让蓝红黄角块也准备到了应有的位置。
<img>/tutorial/common/frontc.gif
<img>/tutorial/level2/firstlayer12.gif
让蓝红黄角块 转到目标位。
<img>/tutorial/common/downc.gif
<img>/tutorial/level2/firstlayer13.gif
转回顶层。
<img>/tutorial/common/frontac.gif
<img>/tutorial/level2/firstlayer14.gif

这样我们已经打好了地基，简单吧。

<page>
<b>第三步
放第二层的棱色块，变成形如
<img>/tutorial/level3/f2l.gif

对于下面的情况
<img>/tutorial/level3/layer21ar.gif
执行算法1
<img>/tutorial/common/upc.gif
<img>/tutorial/level3/layer22.GIF
<img>/tutorial/common/rightc.gif
<img>/tutorial/level3/layer23.GIF
<img>/tutorial/common/upac.gif
<img>/tutorial/level3/layer24.GIF
<img>/tutorial/common/rightac.gif
<img>/tutorial/level3/layer25.GIF
<img>/tutorial/common/upac.gif
<img>/tutorial/level3/layer26.GIF
<img>/tutorial/common/frontac.gif
<img>/tutorial/level3/layer27.GIF
<img>/tutorial/common/upc.gif
<img>/tutorial/level3/layer28.GIF
<img>/tutorial/common/frontc.gif
<img>/tutorial/level3/layer29.GIF

<page>
对于另一边的情况
<img>/tutorial/level3/layer210.gif
执行对称的算法
<img>/tutorial/common/upac.gif
<img>/tutorial/level3/layer222.gif
<img>/tutorial/common/frontac.gif
<img>/tutorial/level3/layer223.gif
<img>/tutorial/common/upc.gif
<img>/tutorial/level3/layer224.gif
<img>/tutorial/common/frontc.gif
<img>/tutorial/level3/layer225.gif
<img>/tutorial/common/upc.gif
<img>/tutorial/level3/layer226.gif
<img>/tutorial/common/rightc.gif
<img>/tutorial/level3/layer229.gif
<img>/tutorial/common/upac.gif
<img>/tutorial/level3/layer2210.gif
<img>/tutorial/common/rightac.gif
<img>/tutorial/level3/layer2211.gif

<page>
<img>/tutorial/level3/layer211.gif
会有一些情况下，你需要的棱色块不在顶面，而在第二层的错误位置或者朝向，这时咋办？首先，你要先做在顶面上的那些， 可能不听话的棱色块会自己变到顶面上，如果最后他还是不听话，如左图，我们就用上面算法把个无关大局的棱色块搞到该位置，我们要的那个红白棱色块就自然换到顶层了，这稍微有点麻烦，不过对于我们初等解法只能这样先忍忍了，这也可能会激发大家去学高级的解法吧：）

<page>
<b>第四步
在魔方新的顶面上画十字
<img>/tutorial/level4/llcross.gif
除了上面已经好的情况，还有下面3中情况
<img>/tutorial/level4/llcross1.gif
<img>/tutorial/level4/llcross2.gif
<img>/tutorial/level4/llcross3.gif
用下一页的算法，可以在这几种情况之间切换

<page>
画十字的算法开始
<img>/tutorial/level4/llcross11.GIF
<img>/tutorial/common/rightac.gif
<img>/tutorial/level4/llcross12.GIF
<img>/tutorial/common/upac.gif
<img>/tutorial/level4/llcross13.GIF
<img>/tutorial/common/frontac.gif
<img>/tutorial/level4/llcross14.GIF
<img>/tutorial/common/upc.gif
<img>/tutorial/level4/llcross15.GIF
<img>/tutorial/common/frontc.gif
<img>/tutorial/level4/llcross16.GIF
<img>/tutorial/common/rightc.gif
<img>/tutorial/level4/llcross17.GIF
然后转成上页所示的角度，按照这个算法继续进行，直至有十字

<page>
<b>第五步
翻转魔方顶面四角，对好顶面颜色，使之形成
<img>/tutorial/level5/llcornero08.gif
魔方顶面的四角只可能有8种情况，第一种就是已经对好，而其他7种如下。
<img>/tutorial/level5/llpermute7case.gif
对于第一种，摆成这样
<img>/tutorial/level5/llcornero01a.gif
应用下面算法，这个算法的作用就是保持最上面角（左后角）的朝向不变，同时把下面三个角的绿色翻上去。
<img>/tutorial/level5/llcornero01.gif
<img>/tutorial/common/rightac.gif
<img>/tutorial/level5/llcornero02.gif
<img>/tutorial/common/upac.gif
<img>/tutorial/level5/llcornero03.gif
<img>/tutorial/common/rightc.gif
<img>/tutorial/level5/llcornero04.gif
<img>/tutorial/common/upac.gif
<img>/tutorial/level5/llcornero05.gif
<img>/tutorial/common/rightac.gif
<img>/tutorial/level5/llcornero06.gif
<img>/tutorial/common/upac2.gif
<img>/tutorial/level5/llcornero07.gif
<img>/tutorial/common/rightc.gif
<img>/tutorial/level5/llcornero08.gif

<page>
对于第二种情况,我们应该发现他就是一情况的对角线镜像是吧,所以上面算法去做对角线镜像就得到了情况二的算法：魔方
<img>/tutorial/level5/llcorner201.gif
<img>/tutorial/common/frontc.gif
<img>/tutorial/level5/llcorner202.gif
<img>/tutorial/common/upc.gif
<img>/tutorial/level5/llcorner203.gif
<img>/tutorial/common/frontac.gif
<img>/tutorial/level5/llcorner204.gif
<img>/tutorial/common/upc.gif
<img>/tutorial/level5/llcorner205.gif
<img>/tutorial/common/frontc.gif
<img>/tutorial/level5/llcorner206.gif
<img>/tutorial/common/upc2.gif
<img>/tutorial/level5/llcorner207.gif
<img>/tutorial/common/frontac.gif
<img>/tutorial/level5/llcorner208.gif

<page>
你有2/3的概率碰到他们，其实你完全可以自己用1，2算法试试翻这么几次，看看会发生什么，慢慢就找到规律了。3-7情况都是用1，2算法的组合解决，最多用2个算法。

摆法参考上面两个算法对应1，2的情况，从右下角往左上角看

<page>
<b>第六步
调整四角顺序，使之形成
<img>/tutorial/level6/llcornero09.gif
这步很简单，首先转转顶面看看是不是已经对好（概率1/6），如果不是就首先找一条边，这条边的两个角有相同的颜色（概率2/3），像以下这些例子，另有1/6的概率你找不到这样的一条边，我们一会儿再说。

正面
<img>/tutorial/level6/llroute2step6ex42.gif
注意橙色和黄色，找到这种情况

背面
<img>/tutorial/level6/llroute2step6ex41.gif

算法开始
<img>/tutorial/level6/llroute2step6ex42.gif
<img>/tutorial/common/l.gif
<img>/tutorial/level6/llroute2step6a2.gif
<img>/tutorial/common/f1.gif
<img>/tutorial/level6/llroute2step6a3.gif
<img>/tutorial/common/l.gif
<img>/tutorial/level6/llroute2step6a4.gif
<img>/tutorial/common/backc2.gif
<img>/tutorial/level6/llroute2step6a6.gif
<img>/tutorial/common/l1.gif
<img>/tutorial/level6/llroute2step6a7.gif
<img>/tutorial/common/f.gif
<img>/tutorial/level6/llroute2step6a8.gif
<img>/tutorial/common/l.gif
<img>/tutorial/level6/llroute2step6a9.gif
<img>/tutorial/common/backc2.gif
<img>/tutorial/level6/llroute2step6a10.gif
<img>/tutorial/common/leftc2.gif
<img>/tutorial/level6/llroute2step6a11.gif

如果应用完算法 ，四个角还没有和下面两层的颜色吻合，转转就可以了。这步本质上的作用就是交换了前面两个角的位置。或者说做了这样的一个逆时针旋转，这两个作用在顶面旋转过后是等效的。


第二种情况,找不到有两角同色的边
如果你碰到的情况找不到这样一条有两角同色的边，你就闭着眼睛应用一遍上面的算法，就一定可以找到啦。这种情况其实是你需要交换一个对角线上的两个角。

<page>
<b>第七步
将最后的棱色块顺序排列好

最后一步啦，大家是不是都很兴奋啊，好不容易啊，胜利就在前方了。最后一步很简单，你只要看准魔方的方向就行啦。
第一种情况，你想让3个棱逆时针旋转。(概率1/3)
<img>/tutorial/level7/lledge1.gif
首先你要把已经对好颜色的那条边放在前面。
再用第五步的算法1+U2+算法2+U2 就行啦。

第五步算法1
<img>/tutorial/common/rightac.gif

<img>/tutorial/common/upac.gif

<img>/tutorial/common/rightc.gif

<img>/tutorial/common/upac.gif

<img>/tutorial/common/rightac.gif

<img>/tutorial/common/upac2.gif

<img>/tutorial/common/rightc.gif
U2
<img>/tutorial/common/upc2.gif
第五步算法2
<img>/tutorial/common/frontc.gif

<img>/tutorial/common/upc.gif

<img>/tutorial/common/frontac.gif

<img>/tutorial/common/upc.gif

<img>/tutorial/common/frontc.gif

<img>/tutorial/common/upc2.gif

<img>/tutorial/common/frontac.gif
U2
<img>/tutorial/common/upc2.gif



<page>
第二种情况，你想让3个棱顺时针旋转。(概率1/3)
<img>/tutorial/level7/lledge2.gif
那么要把已经对好颜色的那条边放在右面。这时你会发现第二个图就是第一个图的对角线镜像。
所以就是第五步算法2+U2+算法1+U2

第五步算法2
<img>/tutorial/common/frontc.gif

<img>/tutorial/common/upc.gif

<img>/tutorial/common/frontac.gif

<img>/tutorial/common/upc.gif

<img>/tutorial/common/frontc.gif

<img>/tutorial/common/upc2.gif

<img>/tutorial/common/frontac.gif
U2
<img>/tutorial/common/upc2.gif
第五步算法1
<img>/tutorial/common/rightac.gif

<img>/tutorial/common/upac.gif

<img>/tutorial/common/rightc.gif

<img>/tutorial/common/upac.gif

<img>/tutorial/common/rightac.gif

<img>/tutorial/common/upac2.gif

<img>/tutorial/common/rightc.gif
U2
<img>/tutorial/common/upc2.gif

<page>
如果没有遇到上面两种情况。其实很简单，你随便应用一遍上面顺时针或逆时针的算法，然后他就会变成顺时针或逆时针的情况了。

<page>
<b>大功告成
这样应该就可以完成6面的魔方了。
<img>/tutorial/level7/cube.gif